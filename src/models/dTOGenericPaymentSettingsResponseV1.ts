/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  DTOGenericPaymentDisbursementFeeV1,
  dTOGenericPaymentDisbursementFeeV1Schema,
} from './dTOGenericPaymentDisbursementFeeV1';
import {
  DTOGenericPaymentLoadFeeV1,
  dTOGenericPaymentLoadFeeV1Schema,
} from './dTOGenericPaymentLoadFeeV1';

export interface DTOGenericPaymentSettingsResponseV1 {
  /** This value represents the total time in milliseconds that the Platform took to process the request. */
  durationMs?: bigint;
  /** This is the status of executing the request.&nbsp;A code of ‘Ok’ indicates no errors */
  status?: string;
  /** This is a plain English description of the status. */
  statusDescription?: string;
  /** An array of DisbursementFeeDetail */
  disbursementFees?: DTOGenericPaymentDisbursementFeeV1[];
  /** An array of LoadFeeDetai */
  loadFees?: DTOGenericPaymentLoadFeeV1[];
  /** True if the Sign-In Account has permission to debit/Refund credit cards */
  canDebitCreditCards?: boolean;
  /** True if the Sign-In Account has permission to make PBAY payments */
  canPayBpay?: boolean;
  /** True if the Sign-In Account has permission to use the security/v1/createImpersonationTokenAsIssuer */
  canImpersonate?: boolean;
  /** True if the Sign-In Account has permission to Direct Debit an ABA */
  canDirectDebit?: boolean;
  /** True if the Sign-In Account has permission to Direct Credit an ABA */
  canDirectCredit?: boolean;
  /** True if the Sign-In Account has permission to create mAccounts */
  canCreateMAccounts?: boolean;
  /** True if the Sign-In Account has permission to create mWallets */
  canCreateMWallets?: boolean;
  /** True if the Sign-In Account has permission to access the User Database */
  canAccessUserDatabase?: boolean;
  /** True if the Sign-In Account is an issuer */
  isIssuer?: boolean;
  /** 16-digit Account number of Issuer. */
  issuerMAccountNumber?: string;
  /** The monthly fee(ExGst) for the Sign-In Account */
  monthlyFeeExGst?: number;
  /** 16-digit Account number of Sign-In Clearing Account */
  clearingMAccountNumber?: string;
  /** 16-Digit Account number of Fee Account if there is one */
  feeMAccountNumber?: string;
  /** Monthly fee (ExGST) of the Sign-In Fee Account */
  feeMAccountMonthlyFeeExGst?: number;
  /** Set-up fee (ExGST) for each mAccount created via mAccount/v1/create */
  childMAccountSetUpFeeExGst?: number;
  /** Monthly fee (ExGST) for each mAccount created vian mAccount/v1/create */
  childMAccountMonthlyFeeExGst?: number;
  /** if 'true', acccount has set up as ClearedFunds */
  requiresClearedFundsOnly?: boolean;
}

export const dTOGenericPaymentSettingsResponseV1Schema: Schema<DTOGenericPaymentSettingsResponseV1> = object(
  {
    durationMs: ['durationMs', optional(bigint())],
    status: ['status', optional(string())],
    statusDescription: ['statusDescription', optional(string())],
    disbursementFees: [
      'disbursementFees',
      optional(array(lazy(() => dTOGenericPaymentDisbursementFeeV1Schema))),
    ],
    loadFees: [
      'loadFees',
      optional(array(lazy(() => dTOGenericPaymentLoadFeeV1Schema))),
    ],
    canDebitCreditCards: ['canDebitCreditCards', optional(boolean())],
    canPayBpay: ['canPayBpay', optional(boolean())],
    canImpersonate: ['canImpersonate', optional(boolean())],
    canDirectDebit: ['canDirectDebit', optional(boolean())],
    canDirectCredit: ['canDirectCredit', optional(boolean())],
    canCreateMAccounts: ['canCreateMAccounts', optional(boolean())],
    canCreateMWallets: ['canCreateMWallets', optional(boolean())],
    canAccessUserDatabase: ['canAccessUserDatabase', optional(boolean())],
    isIssuer: ['isIssuer', optional(boolean())],
    issuerMAccountNumber: ['issuerMAccountNumber', optional(string())],
    monthlyFeeExGst: ['monthlyFeeExGst', optional(number())],
    clearingMAccountNumber: ['clearingMAccountNumber', optional(string())],
    feeMAccountNumber: ['feeMAccountNumber', optional(string())],
    feeMAccountMonthlyFeeExGst: [
      'feeMAccountMonthlyFeeExGst',
      optional(number()),
    ],
    childMAccountSetUpFeeExGst: [
      'childMAccountSetUpFeeExGst',
      optional(number()),
    ],
    childMAccountMonthlyFeeExGst: [
      'childMAccountMonthlyFeeExGst',
      optional(number()),
    ],
    requiresClearedFundsOnly: ['requiresClearedFundsOnly', optional(boolean())],
  }
);
