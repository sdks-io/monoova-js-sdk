/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  DTOGenericPaymentFeeBreakdown,
  dTOGenericPaymentFeeBreakdownSchema,
} from './dTOGenericPaymentFeeBreakdown';

export interface DTOGenericPaymentGenericFinanceResponseV2 {
  /** This value represents the total time in milliseconds that the Platform took to process the request. */
  durationMs?: bigint;
  /** This is the status of executing the request.&nbsp;A code of ‘Ok’ indicates no errors */
  status?: string;
  /** This is a plain English description of the status. */
  statusDescription?: string;
  /** This is the Platform ID that is unique to your payment request. 0 will be returned if any errors occurred. */
  transactionId?: number;
  /** This is the fee amount excluding GST */
  feeAmountExcludingGst?: number;
  /** This is the GST Component of the fee amount that has been debited from your mAccount */
  feeAmountGstComponent?: number;
  /** This is the total fee amount Including GST that has been debited from your mAccount */
  feeAmountIncludingGst?: number;
  /** This is the unique reference that was passed in by the calling service */
  callerUniqueReference?: string;
  feeBreakdown?: DTOGenericPaymentFeeBreakdown;
}

export const dTOGenericPaymentGenericFinanceResponseV2Schema: Schema<DTOGenericPaymentGenericFinanceResponseV2> = object(
  {
    durationMs: ['durationMs', optional(bigint())],
    status: ['status', optional(string())],
    statusDescription: ['statusDescription', optional(string())],
    transactionId: ['transactionId', optional(number())],
    feeAmountExcludingGst: ['feeAmountExcludingGst', optional(number())],
    feeAmountGstComponent: ['feeAmountGstComponent', optional(number())],
    feeAmountIncludingGst: ['feeAmountIncludingGst', optional(number())],
    callerUniqueReference: ['callerUniqueReference', optional(string())],
    feeBreakdown: [
      'feeBreakdown',
      optional(lazy(() => dTOGenericPaymentFeeBreakdownSchema)),
    ],
  }
);
