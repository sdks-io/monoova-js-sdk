/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  literal,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Disbursement, disbursementSchema } from './disbursement';
import { FinancialTransaction } from './financialTransaction';
import { MAccount2, mAccount2Schema } from './mAccount2';

/** payment source from mAccount */
export interface PaymentSourceMAccount extends FinancialTransaction {
  mAccount?: MAccount2;
  /** This description will be displayed on the mAccount statements. If any disbursement object is present, this description will be overwritten. This description will only display on statements for payments directly into the sign in mAccount. (ie no disbursement object) */
  description?: string;
  disbursements?: Disbursement[];
}

export const paymentSourceMAccountSchema: Schema<any> = object({
  mAccount: ['mAccount', optional(lazy(() => mAccount2Schema))],
  description: ['description', optional(string())],
  disbursements: [
    'disbursements',
    optional(array(lazy(() => disbursementSchema))),
  ],
  uniqueReference: ['uniqueReference', optional(string())],
  printUniqueReferenceOnStatement: [
    'printUniqueReferenceOnStatement',
    optional(boolean()),
  ],
  totalAmount: ['totalAmount', optional(number())],
  paymentSource: ['paymentSource', optional(literal('mAccount'))],
});
