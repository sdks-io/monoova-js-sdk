/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  literal,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Disbursement1, disbursement1Schema } from './disbursement1';
import { FinancialTransaction } from './financialTransaction';

/** payment source from token */
export interface PaymentSourceToken extends FinancialTransaction {
  /** The text (GUID) that identifies the token */
  token?: string;
  /** This description will be displayed on the mAccount statements. If any disbursement object is present, this description will be overwritten. This description will only display on statements for payments directly into the sign in mAccount (ie no disbursement object) */
  description?: string;
  disbursements?: Disbursement1[];
}

export const paymentSourceTokenSchema: Schema<any> = object({
  token: ['token', optional(string())],
  description: ['description', optional(string())],
  disbursements: [
    'disbursements',
    optional(array(lazy(() => disbursement1Schema))),
  ],
  uniqueReference: ['uniqueReference', optional(string())],
  printUniqueReferenceOnStatement: [
    'printUniqueReferenceOnStatement',
    optional(boolean()),
  ],
  totalAmount: ['totalAmount', optional(number())],
  paymentSource: ['paymentSource', optional(literal('token'))],
});
