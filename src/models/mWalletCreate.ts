/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { MobileForSms, mobileForSmsSchema } from './mobileForSms';

export interface MWalletCreate {
  /** Email address, Telephone number, landline number or mWallet account number. */
  identifier: string;
  /** 4 digit numerical pin. */
  pin: number;
  /** Full name of customer. */
  name: string;
  /** This is a short form name of the customer. Can be empty. */
  nickName?: string;
  /** Birth date of customer or require field in ISO 8601 date-time format. Note that Timezone is suppressed. The default Timezone is Sydney local time. */
  dateOfBirth: string;
  /** Contact phone number. This is not used for authentication. Required field in conjunction with email address that must start with 0. All non-numbers are stripped. <br/>Phone numbers are validated with googleâ€™s common <a href="https://github.com/google/libphonenumber" target='_blank' rel="noopener noreferrer">library</a>. Numbers that can't be validated as correct cannot be used in mWallet creation. A test tool for the validation routine can be found <a target='_blank' href="https://libphonenumber.appspot.com/" rel="noopener noreferrer">here</a>. */
  phone?: number;
  /** Contact email. This is not used for authentication. Limited to 300 characters. Required field in conjunction with phone and should contain @ and follow normal email format conventions. Converted to lowercase. This email address is used to email the customer receipts for BPAY transactions. */
  email?: string;
  /** If true, allow the creation of a duplicate mWallet of any identifier type. */
  allowDuplicates?: boolean;
  /** Company ABN of the mAccount. All non numbers are stripped */
  abn?: string;
  options?: MobileForSms[];
}

export const mWalletCreateSchema: Schema<MWalletCreate> = object({
  identifier: ['identifier', string()],
  pin: ['pin', number()],
  name: ['name', string()],
  nickName: ['nickName', optional(string())],
  dateOfBirth: ['dateOfBirth', string()],
  phone: ['phone', optional(number())],
  email: ['email', optional(string())],
  allowDuplicates: ['allowDuplicates', optional(boolean())],
  abn: ['abn', optional(string())],
  options: ['options', optional(array(lazy(() => mobileForSmsSchema)))],
});
