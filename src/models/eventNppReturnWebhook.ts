/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { number, object, optional, Schema, string } from '../schema';
import { PayIdType1Enum, payIdType1EnumSchema } from './payIdType1Enum';

export interface EventNppReturnWebhook {
  /** Return Date. */
  returnDate?: string;
  /** Total Amount. */
  amount?: number;
  /** Payee BSB. */
  bsb?: string;
  /** Payee Bank Account Number. */
  accountNumber?: string;
  /** Payer submitted Account Name. */
  accountName?: string;
  /** PayId Identifier of the Payee. */
  payId?: string;
  /** PayId Type. Possible values:&nbsp; ABN, Email, PhoneNumber, OrganisationId, ACN */
  payIdType?: PayIdType1Enum;
  /** End to End identifier submitted by Payer. */
  endToEndId?: string;
  /** Return Reason Text. */
  returnReason?: string;
  /** Original Transaction Date. */
  transactionDate?: string;
  /** Original Transaction Id. */
  transactionId?: number;
  /** Original Client UniqueReference, generated by the calling service. */
  uniqueReference?: string;
  /** Original Remitting Entity. */
  remitterName?: string;
  /** Original Payment reference. */
  lodgementRef?: string;
  /** Return Transaction Id. */
  returnTransactionId?: number;
}

export const eventNppReturnWebhookSchema: Schema<EventNppReturnWebhook> = object(
  {
    returnDate: ['ReturnDate', optional(string())],
    amount: ['Amount', optional(number())],
    bsb: ['Bsb', optional(string())],
    accountNumber: ['AccountNumber', optional(string())],
    accountName: ['AccountName', optional(string())],
    payId: ['payId', optional(string())],
    payIdType: ['payIdType', optional(payIdType1EnumSchema)],
    endToEndId: ['EndToEndId', optional(string())],
    returnReason: ['ReturnReason', optional(string())],
    transactionDate: ['TransactionDate', optional(string())],
    transactionId: ['TransactionId', optional(number())],
    uniqueReference: ['UniqueReference', optional(string())],
    remitterName: ['RemitterName', optional(string())],
    lodgementRef: ['LodgementRef', optional(string())],
    returnTransactionId: ['ReturnTransactionId', optional(number())],
  }
);
