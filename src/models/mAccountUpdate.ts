/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Option, optionSchema } from './option';

export interface MAccountUpdate {
  /** 16-Digit account number that uniquely identifies the mAccount. */
  accountNumber: string;
  /** Company name of the mAccount. */
  name?: string;
  /** Company ABN of the mAccount. All non numbers are stripped. See allowDuplicates. */
  abn: string;
  /** Contact name. Spaces are stripped. */
  contactName: string;
  /** Contact number. All non numbers are striped. */
  contactNumber: number;
  /** Contact email. Converted to lowercase. */
  email: string;
  /** An optional postal address line such as a Building, section or unit. */
  addressLine1?: string;
  /** An address line is the main postal address of the Company. */
  addressLine2: string;
  /** Postal address suburb. */
  suburb: string;
  /** Postal address state. */
  state: string;
  /** Postal address post code. */
  postCode?: string;
  /** BSB number of associated bank account. BSB format is ‘000-000’. */
  bsb?: string;
  /** Bank account number of associated bank account. */
  bankAccountNumber?: number;
  /** Bank account title or name of associated bank account. */
  bankAccountTitle?: string;
  /** See mAccountFinancials class This property is ignored when calling mAccount/v1/create and mAccount/v1/update. This property only contains valid values when calling mAccount/v1/get. */
  financials?: boolean;
  options?: Option[];
}

export const mAccountUpdateSchema: Schema<MAccountUpdate> = object({
  accountNumber: ['accountNumber', string()],
  name: ['name', optional(string())],
  abn: ['abn', string()],
  contactName: ['contactName', string()],
  contactNumber: ['contactNumber', number()],
  email: ['email', string()],
  addressLine1: ['addressLine1', optional(string())],
  addressLine2: ['addressLine2', string()],
  suburb: ['suburb', string()],
  state: ['state', string()],
  postCode: ['postCode', optional(string())],
  bsb: ['bsb', optional(string())],
  bankAccountNumber: ['bankAccountNumber', optional(number())],
  bankAccountTitle: ['bankAccountTitle', optional(string())],
  financials: ['financials', optional(boolean())],
  options: ['options', optional(array(lazy(() => optionSchema)))],
});
