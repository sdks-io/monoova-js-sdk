/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';
import {
  RejectionReasonCodeEnum,
  rejectionReasonCodeEnumSchema,
} from './rejectionReasonCodeEnum';
import { Response1Enum, response1EnumSchema } from './response1Enum';

export interface ReceivablesProcessrtgsimt {
  /** This is the transactionId that appears in call back and report. */
  transactionId: string;
  /** Confirm to accept RTGS/IMT transaction. Reject to reject RTGS/IMT transaction. */
  response: Response1Enum;
  /** AM02    (Transaction amount is greater than allowed maximum) <br> AM06    (Transaction amount is less than agreed minimum) <br> AM07    (Amount has been  blocked by regulatory authorities.) <br> BE05      (Sender is not recognised by beneficiary) <br> AG01     (No agreement is on file at the receiver for affecting associated transaction) <br> MS01    (Reason has not been specified due to sensitivities.) <br> RR02  (Senders name and/or address needed for regulatory requirements is insufficient or missing.) <br> RR03  (Recipients name and/or address needed for regulatory requirements is insufficient or missing.) <br> BE04    (Specification of beneficiary address, which is required for payment, is missing/not correct.). <br> <strong> Note&#58; </strong> RejectionReasonCode is only required if response is "Reject". RejectionReasonCode can be omitted if response is "confirm". */
  rejectionReasonCode?: RejectionReasonCodeEnum;
}

export const receivablesProcessrtgsimtSchema: Schema<ReceivablesProcessrtgsimt> = object(
  {
    transactionId: ['transactionId', string()],
    response: ['response', response1EnumSchema],
    rejectionReasonCode: [
      'rejectionReasonCode',
      optional(rejectionReasonCodeEnumSchema),
    ],
  }
);
