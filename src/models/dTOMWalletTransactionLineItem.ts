/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { number, object, optional, Schema, string } from '../schema';

export interface DTOMWalletTransactionLineItem {
  /** If you need to sort the results, only use this field. If you sort the results on any other field, the runningBalance wonâ€™t make sense.rowOrder start at 0. */
  rowOrder?: number;
  /** This is the Platform internal Id for the row returned */
  mPaymentsId?: number;
  /** This is the transactionId that was returned from a financial transaction */
  transactionId?: number;
  /** The time the transaction occurred in ISO 8601 date-time format. Note that Timezone is suppressed. The example Timezone is Sydney local time */
  dateTime?: string;
  /** Name of the mAccount that conducted the transaction */
  mAccountName?: string;
  /** Major keyword describing the transaction. E.g. include Payment, LoadFunds, DailySettlement */
  transactionType?: string;
  /** Minor keyword describing thetransaction. E.g. GatewayMWalletCredit */
  subTransactionType?: string;
  /** The amount of funds credited from the mWallet */
  credit?: number;
  /** The amount of funds debited from the mWallet */
  debit?: number;
  /** The current balance of the mAccount at the end of this single row transaction */
  runningBalance?: number;
  /** This is the description that was provided by the caller to the financial API with your unique reference prepended */
  description?: string;
}

export const dTOMWalletTransactionLineItemSchema: Schema<DTOMWalletTransactionLineItem> = object(
  {
    rowOrder: ['rowOrder', optional(number())],
    mPaymentsId: ['mPaymentsId', optional(number())],
    transactionId: ['transactionId', optional(number())],
    dateTime: ['dateTime', optional(string())],
    mAccountName: ['mAccountName', optional(string())],
    transactionType: ['transactionType', optional(string())],
    subTransactionType: ['subTransactionType', optional(string())],
    credit: ['credit', optional(number())],
    debit: ['debit', optional(number())],
    runningBalance: ['runningBalance', optional(number())],
    description: ['description', optional(string())],
  }
);
